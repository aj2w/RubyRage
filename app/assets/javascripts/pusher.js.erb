
// Enable pusher logging - don't include this in production
Pusher.log = function(message) {
  if (window.console && window.console.log) {
    window.console.log(message);
  }
};

var pusher = new Pusher('<%= Pusher.key %>');
var channel = pusher.subscribe('rubyrage_thomas');

channel.bind('my_event', function(data) {
  alert(data.message)
});

channel.bind('gameBroadcast', function(rawGameboardData) {
  var atOpponentGameboard = rubyRageBattleMode.returnCtxOpponentGameboard();
  var atOpponentPreview = rubyRageBattleMode.returnCtxOpponentPreview();

  var reassembledGameboard = rubyRageBattleMode.reassembleTwoDimArray(rawGameboardData.mySittingRubymonsPosition);
  var reassembledCurrentRubyBox = rubyRageBattleMode.reassembleTwoDimArray(rawGameboardData.myFallingRubymonsPosition);
  var reassembledUpcomingRubymonPair = _.map(rawGameboardData.myUpcomingRubymonPair,
    function(string) {
      return parseInt(string);
    }
  );
  var myCurrentXposition = parseInt(rawGameboardData.myCurrentXposition);
  var myCurrentYposition = parseInt(rawGameboardData.myCurrentYposition);
  rubyRageBattleMode.paintOverOpponents( atOpponentGameboard, atOpponentPreview);
  rubyRageBattleMode.renderOpponentsSittingRubymons( reassembledGameboard, atOpponentGameboard);
  rubyRageBattleMode.renderOpponentsFallingRubymons( reassembledCurrentRubyBox , atOpponentGameboard, myCurrentXposition, myCurrentYposition);
  rubyRageBattleMode.renderOpponentsNextRubymons( reassembledUpcomingRubymonPair, atOpponentPreview);
});

//////////////////////////////////////////////////////////////////////////////
// PUSHER RELATED EVENTS & FUNCTIONS
//////////////////////////////////////////////////////////////////////////////

$('#battle-button').click(function(){
  // startSendingRequest();
  setInterval(startSendingRequest, 100);
})

function startSendingRequest() {
  $.ajax({
    url: "/games/gameBroadcast",
    type: "post",
    dataType: "json",
    data: {"mySittingRubymonsPosition": gameboardInplay,
           "myFallingRubymonsPosition": currentRubyBox,
           "myCurrentXposition": currentX,
           "myCurrentYposition": currentY,
           "myUpcomingRubymonPair": rubymonPairsPreset[runningRubymonIndex]}
  })
}


